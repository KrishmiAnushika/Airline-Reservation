/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.ars.viewserver;

import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.ars.controller.ManageClassDetailsController;
import lk.ijse.ars.controller.ManageClassesController;
import lk.ijse.ars.controller.ManageFlightController;
import lk.ijse.ars.dto.ClassDetailsDTO;
import lk.ijse.ars.dto.ClassDetails_PKDTO;
import lk.ijse.ars.dto.ClassesDTO;
import lk.ijse.ars.dto.FlightDTO;
/**
 *
 * @author USER
 */
public class Custom extends javax.swing.JPanel {
    String classes = "";
    private DefaultTableModel dtm;

    /**
     * Creates new form Custom
     */
    public Custom() {
        initComponents();
        Classes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        spinnerExWindow = new javax.swing.JSpinner();
        textClassFeeEx = new javax.swing.JTextField();
        spinnerExNormal = new javax.swing.JSpinner();
        cmbFlightName = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClassDetails = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cmbClassName1 = new javax.swing.JComboBox();

        jTextField1.setText("jTextField1");

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/ars/icon/Select_White_(56).png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/ars/icon/FontAwesome_f071(3)_36.png"))); // NOI18N
        jLabel13.setText(" Are You Sure ! ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
            .addComponent(jLabel13)
        );

        jPanel10.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 390, 40));
        jPanel10.add(spinnerExWindow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 140, 27));

        textClassFeeEx.setForeground(new java.awt.Color(102, 102, 102));
        textClassFeeEx.setText("- Class Fee - ");
        textClassFeeEx.setToolTipText("");
        textClassFeeEx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textClassFeeExMouseClicked(evt);
            }
        });
        textClassFeeEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClassFeeExActionPerformed(evt);
            }
        });
        jPanel10.add(textClassFeeEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 140, 30));
        jPanel10.add(spinnerExNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 140, 28));

        cmbFlightName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbFlightNameMouseClicked(evt);
            }
        });
        jPanel10.add(cmbFlightName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 140, 30));

        tblClassDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class Name", "Flight Name", "Window SeatCount", "Normal Seat Count", "Class Fee"
            }
        ));
        jScrollPane3.setViewportView(tblClassDetails);

        jPanel10.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 220, 130));

        jLabel15.setText("Window Seat :");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 140, -1));

        jLabel20.setText("Normal Seat :");
        jPanel10.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 140, -1));

        jPanel10.add(cmbClassName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 140, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked

        try {

            String flightID = cmbFlightName.getSelectedItem().toString();
            String classesID = cmbClassName1.getSelectedItem().toString();
            FlightDTO flightDTO = new FlightDTO();
            flightDTO.setFlightID(flightID);

            ClassesDTO classesDTO = new ClassesDTO();
            classesDTO.setClassID(classesID);

            //            FlightDTO flightDTO = ManageFlightController.findById(flightID);
            //                if (flightDTO.getFlightID().equals(flightDTO)) {
                //                    cmbFlightName.setSelectedItem(flightDTO.getFlightName());
                //
                //                ClassesDTO classesDTO = manageClassesController.findById(classesID);
                //                if (classesDTO.getClassID().equals(classesDTO)) {
                    //                    cmbClassName1.setSelectedItem(classesDTO.getClassName());
                    boolean addClassDetails = false;
                    DefaultTableModel dtmClassDetails = (DefaultTableModel) tblClassDetails.getModel();
                    for (int i = 0; i <= dtmClassDetails.getRowCount(); i++) {

                        try {
                            ClassDetailsDTO classDetailsDTO = new ClassDetailsDTO();
                            classDetailsDTO.setWindowSeatCount(dtmClassDetails.getValueAt((i), 4).toString());
                            classDetailsDTO.setNormalSeatCount(dtmClassDetails.getValueAt((i), 3).toString());
                            classDetailsDTO.setClassFee((Double.parseDouble( dtmClassDetails.getValueAt((i), 2).toString())));
                            classesDTO.setClassName(dtmClassDetails.getValueAt((i), 0).toString());
                            flightDTO.setFlightName(dtmClassDetails.getValueAt(i, 1).toString());
                            classesDTO.setClassID(classesID);
                            flightDTO.setFlightID(flightID);
                            new ClassDetails_PKDTO(classesID, flightID);

                            //                    classDetailsDTO = new ClassDetailsDTO(dtmClassDetails.getValueAt(i, 0).toString(), dtmClassDetails.getValueAt(i, 1).toString(), dtmClassDetails.getValueAt(i, 2).toString(), (dtmClassDetails.getValueAt(i, 3)).toString(), dtmClassDetails.getValueAt(i, 4).toString(), (dtmClassDetails.getValueAt(i, 5)).toString(), Double.parseDouble( dtmClassDetails.getValueAt(i, 3).toString()), findByName);

                            addClassDetails = ManageClassDetailsController.addClassDetails(classDetailsDTO, classesDTO, flightDTO);
                        } catch (Exception ex) {
                            Logger.getLogger(AddNewFlight_1.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    if (addClassDetails) {
                        JOptionPane.showMessageDialog(this, "ClassDetails has been saved Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "ClassDetails has been Faild");
                    }

                } catch (Exception ex) {
                    Logger.getLogger(AddNewFlight_1.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void textClassFeeExMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textClassFeeExMouseClicked
        if (textClassFeeEx.getText().equalsIgnoreCase("- Class Fee - ")) {
            textClassFeeEx.setText("");
            textClassFeeEx.setForeground(Color.BLACK);
        }
        //        if (textClassFeeEcon.getText().equals("")) {
            //            textClassFeeEcon.setText("- Class Fee - ");
            //            textClassFeeEcon.setForeground(Color.GRAY);
            //        }
        //        if (textClassFeeBus.getText().equals("")) {
            //            textClassFeeBus.setText("- Class Fee - ");
            //            textClassFeeBus.setForeground(Color.GRAY);
            //        }
    }//GEN-LAST:event_textClassFeeExMouseClicked

    private void textClassFeeExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClassFeeExActionPerformed
        String wseatCount = spinnerExWindow.getValue().toString();
        String nseatCount = spinnerExNormal.getValue().toString();
        double classFee = Double.parseDouble(textClassFeeEx.getText());

        dtm = (DefaultTableModel) tblClassDetails.getModel();
        Object[] rowData = {cmbClassName1.getSelectedItem(),cmbFlightName.getSelectedItem(), wseatCount, nseatCount, classFee};
        dtm.addRow(rowData);
    }//GEN-LAST:event_textClassFeeExActionPerformed

    private void cmbFlightNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbFlightNameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFlightNameMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbClassName1;
    private javax.swing.JComboBox cmbFlightName;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JSpinner spinnerExNormal;
    private javax.swing.JSpinner spinnerExWindow;
    private javax.swing.JTable tblClassDetails;
    private javax.swing.JTextField textClassFeeEx;
    // End of variables declaration//GEN-END:variables

    private void Classes() {
//        String classesID = "";
//        if (business.isSelected()) {
//            classesID = classesID+"business";
//        }if (econimic.isSelected()) {
//            classesID = classesID+"econimic";
//        }if (extra.isSelected()) {
//            classesID = classesID+"extra";
//        }
//        classesID = classesID+"\b";
    }
    private void loadcmbClassName() {
        try {
            ArrayList<ClassesDTO> all = (ArrayList<ClassesDTO>) ManageClassesController.getAllClasses();
            cmbClassName1.removeAll();
            for (ClassesDTO all1 : all) {
                cmbClassName1.addItem(all1.getClassName());

            }
        } catch (Exception ex) {
            Logger.getLogger(AddNewFlight_1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadcmbFlightName() {

        try {
            ArrayList<FlightDTO> all = (ArrayList<FlightDTO>) ManageFlightController.getAllFlight();
            cmbFlightName.removeAll();
            for (FlightDTO all1 : all) {
                cmbFlightName.addItem(all1.getFlightName());
            }
        } catch (Exception e) {
            Logger.getLogger(AddNewFlight_1.class.getName()).log(Level.SEVERE, null, e);
        }
    }
}
